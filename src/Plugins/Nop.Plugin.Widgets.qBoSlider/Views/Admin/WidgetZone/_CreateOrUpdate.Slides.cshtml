@using Nop.Plugin.Widgets.qBoSlider;
@model WidgetZoneModel
@{
    var routeUnivaersal = new Microsoft.AspNetCore.Routing.RouteValueDictionary();
    routeUnivaersal.Add(nameof(WidgetZoneSlideSearchModel.WidgetZoneId), Model.Id);
    routeUnivaersal.Add(nameof(WidgetZoneSlideSearchModel.TargetScreenVariant), (int)ScreenTargetFiltering.Universal);

    var routeMobile = new Microsoft.AspNetCore.Routing.RouteValueDictionary();
    routeMobile.Add(nameof(WidgetZoneSlideSearchModel.WidgetZoneId), Model.Id);
    routeMobile.Add(nameof(WidgetZoneSlideSearchModel.TargetScreenVariant), (int)ScreenTargetFiltering.UseOnMobile);
}
<div class="card-body">
    @await Html.PartialAsync("Table", new DataTablesModel()
        {
            Name = "widget-zone-slides-grid",
            UrlRead = new DataUrl("WidgetZoneSlideList", "qBoWidgetZone", routeUnivaersal),
            UrlDelete = new DataUrl("DeleteSlide", "qBoWidgetZone", null),
            Length = Model.SlideSearchModel.PageSize,
            LengthMenu = Model.SlideSearchModel.AvailablePageSizes,
            PrimaryKeyColumn = nameof(WidgetZoneSlideSearchModel.SlideListItem.Id),
            ColumnCollection = new List<ColumnProperty>()
            {
                new ColumnProperty(nameof(WidgetZoneSlideSearchModel.SlideListItem.HasMobileTargetSlide))
                {
                    //ToDO: Use RenderCustom and show carret for only records where nameof(WidgetZoneSlideSearchModel.SlideListItem.HasMobileTargetSlide) is true
                    //Render = new RenderChildCaret(),
                    Width = "5",
                    Searchable = false,
                    ClassName =  NopColumnClassDefaults.ChildControl,
                    Render = new RenderCustom("renderCarretForSpecific")
                },
                new ColumnProperty(nameof(WidgetZoneSlideSearchModel.SlideListItem.PictureUrl))
                {
                     Title = T("Nop.Plugin.Baroque.Widgets.qBoSlider.Admin.WidgetZone.SlideList.PictureUrl").Text,Width = "300",
                     Visible = true,
                     Render = new RenderPicture(width: 150)
                },
                new ColumnProperty(nameof(WidgetZoneSlideSearchModel.SlideListItem.Name))
                {
                     Title = T("Nop.Plugin.Baroque.Widgets.qBoSlider.Admin.WidgetZone.SlideList.Name").Text,
                     Width = "300",
                     Visible = true
                },
                //TODO: change to nameof(WidgetZoneSlideSearchModel.SlideListItem.HasMobileTargetSlide)
                new ColumnProperty(nameof(WidgetZoneSlideSearchModel.SlideListItem.HasMobileTargetSlide))
                {
                    Title = T("Nop.Plugin.Baroque.Widgets.qBoSlider.Admin.WidgetZone.HasMobileVariant").Text,
                    Width =  "100",
                    ClassName =  NopColumnClassDefaults.Button,
                    Render = new RenderCustom("renderColumnAddMobileSlide")
                },
                new ColumnProperty(nameof(WidgetZoneSlideSearchModel.SlideListItem.StartDateUtc))
                {
                     Title = T("Nop.Plugin.Baroque.Widgets.qBoSlider.Admin.WidgetZone.SlideList.StartDateUtc").Text,
                     Width = "100",
                     Render = new RenderDate(),
                },
                new ColumnProperty(nameof(WidgetZoneSlideSearchModel.SlideListItem.EndDateUtc))
                {
                     Title = T("Nop.Plugin.Baroque.Widgets.qBoSlider.Admin.WidgetZone.SlideList.EndDateUtc").Text,
                     Width = "100",
                     Render = new RenderDate()
                },
                new ColumnProperty(nameof(WidgetZoneSlideSearchModel.SlideListItem.Published))
                {
                     Title = T("Nop.Plugin.Baroque.Widgets.qBoSlider.Admin.WidgetZone.SlideList.Published").Text,
                     ClassName = NopColumnClassDefaults.CenterAll,
                     Width = "100",
                     Render = new RenderBoolean()
                },
                new ColumnProperty(nameof(WidgetZoneSlideSearchModel.SlideListItem.DisplayOrder))
                {
                     Title = T("Nop.Plugin.Baroque.Widgets.qBoSlider.Admin.WidgetZone.SlideList.DisplayOrder").Text,
                     Width = "50",
                },
                new ColumnProperty(nameof(WidgetZoneSearchModel.WidgetZoneListItem.Id))
                {
                     Title = T("Admin.Common.Edit").Text,
                     Width =  "100",
                     ClassName =  NopColumnClassDefaults.Button,
                     Render = new RenderCustom("renderColumnEdit")
                },
                new ColumnProperty(nameof(WidgetZoneSearchModel.WidgetZoneListItem.Id))
                {
                     Title = T("Admin.Common.Delete").Text,
                     Width = "100",
                     Render = new RenderButtonRemove(T("Admin.Common.Delete").Text),
                     ClassName =  NopColumnClassDefaults.Button
                }
            },
            ChildTable = new DataTablesModel
                {
                    Name = "widget-zone-slides-grid-mobile-slide",
                    UrlRead = new DataUrl("WidgetZoneSlideList", "qBoWidgetZone", routeMobile),
                    UrlDelete = new DataUrl("DeleteSlide", "qBoWidgetZone", null),
                    IsChildTable = true,
                    Length = Model.SlideSearchModel.PageSize,
                    LengthMenu = Model.SlideSearchModel.AvailablePageSizes,
                    Paging = false,
                    RefreshButton = false,
                    Filters = new List<FilterParameter>
                    {
                        new FilterParameter(nameof(WidgetZoneSlideSearchModel.SlideListItem.MainOrChildSlideId), nameof(WidgetZoneSlideSearchModel.SlideListItem.Id), true)
                    },
                    ColumnCollection = new List<ColumnProperty>
                    {
                        new ColumnProperty(nameof(WidgetZoneSlideSearchModel.SlideListItem.PictureUrl))
                        {
                            Title = T("Nop.Plugin.Baroque.Widgets.qBoSlider.Admin.WidgetZone.SlideList.PictureUrl").Text,
                            Width = "150",
                            Visible = true,
                            Render = new RenderPicture(width: 150)
                        },
                        new ColumnProperty(nameof(WidgetZoneSlideSearchModel.SlideListItem.Name))
                        {
                            Title = T("Nop.Plugin.Baroque.Widgets.qBoSlider.Admin.WidgetZone.SlideList.Name").Text,
                            Width = "200",
                            Visible = true
                        },
                        new ColumnProperty(nameof(WidgetZoneSlideSearchModel.SlideListItem.StartDateUtc))
                        {
                            Title = T("Nop.Plugin.Baroque.Widgets.qBoSlider.Admin.WidgetZone.SlideList.StartDateUtc").Text,
                            Width = "80",
                            Render = new RenderDate(),
                        },
                        new ColumnProperty(nameof(WidgetZoneSlideSearchModel.SlideListItem.EndDateUtc))
                        {
                            Title = T("Nop.Plugin.Baroque.Widgets.qBoSlider.Admin.WidgetZone.SlideList.EndDateUtc").Text,
                            Width = "80",
                            Render = new RenderDate()
                        },
                        new ColumnProperty(nameof(WidgetZoneSlideSearchModel.SlideListItem.Published))
                        {
                            Title = T("Nop.Plugin.Baroque.Widgets.qBoSlider.Admin.WidgetZone.SlideList.Published").Text,
                            ClassName = NopColumnClassDefaults.CenterAll,
                            Width = "50",
                            Render = new RenderBoolean()
                        },
                        new ColumnProperty(nameof(WidgetZoneSearchModel.WidgetZoneListItem.Id))
                        {
                            Title = T("Admin.Common.Delete").Text,
                            Width = "100",
                            Render = new RenderButtonRemove(T("Admin.Common.Delete").Text),
                            ClassName =  NopColumnClassDefaults.Button
                        }
                    }
                }
        })
</div>
<div class="card-footer">
    @{
        var urlAddUniversal = Url.Action("AddWidgetZoneSlidePopup", "qBoWidgetZone", new { widgetZoneId = Model.Id, targetScreenVariant = (int)ScreenTargetFiltering.Universal, btnId = "btnRefresh", formId = "widget-zone-form" });
    }
    <button type="submit" id="btnAddNewOption" onclick="javascript:OpenWindow('@urlAddUniversal', 1000, 800, true); return false;" class="btn btn-primary">
        @T("Nop.Plugin.Baroque.Widgets.qBoSlider.Admin.WidgetZone.AddNewSlide")
    </button>
    <input type="submit" id="btnRefresh" style="display: none" />
    <script>
        $(document).ready(function () {
            $('#btnRefresh').click(function () {
                //refresh grid
                updateTable('#widget-zone-slides-grid');

                //return false to don't reload a page
                return false;
            });
        });
    </script>
</div>


<script>
    function renderColumnEdit(data, type, row, meta) {
        return '<button onclick=\"javascript:OpenWindow(\'@Url.Content("~/Admin/qBoWidgetZone/EditWidgetZoneSlidePopup/")' + data + '?btnId=btnRefresh&formId=widget-zone-form\', 800, 450, true); return false;\" class="btn btn-default"><i class="fas fa-pencil-alt"></i>@T("Admin.Common.Edit")</button>';
    }

    function renderColumnAddMobileSlide(data, type, row, meta) {
        if (row !== null && row.HasMobileTargetSlide) {
            return "<label>Has mobile variant</label>";
        }
        //return '<button onclick=\"javascript:OpenWindow(\'@(Url.Action("AddWidgetZoneSlidePopup", "qBoWidgetZone", new { widgetZoneId = Model.Id, btnId = "btnRefresh", formId = "widget-zone-form" }))\', 1000, 800, true); return false;\" class=\"btn btn-default\" >@T("Nop.Plugin.Baroque.Widgets.qBoSlider.Admin.WidgetZone.AddMobileVariant")</button>';
        
        @{
        var urlAddMobile = Url.Action("AddWidgetZoneSlidePopup", "qBoWidgetZone", new { WidgetZoneId = Model.Id, targetScreenVariant = (int)ScreenTargetFiltering.UseOnMobile, btnId = "btnRefresh", formId = "widget-zone-form" });
        }

            return '<button onclick=\"javascript:OpenWindow(\'@urlAddMobile@(Html.Raw("&MainOrChildSlideId="))' + row.Id + '\', 1000, 800, true); return false;\" class=\"btn btn-default\" >@T("Nop.Plugin.Baroque.Widgets.qBoSlider.Admin.WidgetZone.AddMobileVariant")</button>';
    }

    function renderCarretForSpecific(data, type, row, meta)
    {
        console.log(row);
        if (row !== null && row.HasMobileTargetSlide) {
            return '<i class="fas fa-caret-right" aria-hidden="true"></i>';
        }
        return '';
    }
</script>