@model CatalogProductsModel


@if (Model.Products.Count <= 0 &&
    !Model.PriceRangeFilter.Enabled &&
    !Model.SpecificationFilter.Enabled &&
    !Model.ManufacturerFilter.Enabled)
{
    return;
}

<div class="product-selectors">
    <button class="filter-block-show">
        @T("Catalog.ShowFilterBtn")
        <span id="svg_icon">@T("Catalog.Filter.Show")</span>
    </button>

    <script asp-location="Footer">
        $(document).ready(function () {
            var button = $('.filter-block-show');
            var originalOffset = button.offset().top;
            
            button.on('click', function () {
                $('.side-2').addClass('show_filter_bar');
            });

            $(window).scroll(function () {
                var scroll = $(window).scrollTop();
                
                //alert("Scrol: " + scroll + "; Button: " + originalOffset );
                if (scroll >= originalOffset) {
                    button.addClass('show_filter_btn_sticky');
                } else {
                    button.removeClass('show_filter_btn_sticky');
                }
            });

            $(window).scroll();
        });
    </script>


    @*view mode*@
    @if (Model.AllowCustomersToSelectPageSize)
    {
        <div class="product-page-size">
            <span>@T("Catalog.PageSize")</span>
            @Html.DropDownList("products-pagesize", Model.PageSizeOptions, new { aria_label = T("Catalog.PageSize.Label")})
            <span>@T("Catalog.PageSize.PerPage")</span>
        </div>
        <script asp-location="Footer">
            $(document).ready(function () {
                var $pageSizeEl = $('#products-pagesize');
                $pageSizeEl.on('change', function () {
                    CatalogProducts.getProducts();
                });

                $(CatalogProducts).on('before', function (e) {
                    e.payload.urlBuilder
                        .addParameter('pagesize', $pageSizeEl.val());
                });
            });
        </script>
    }

    @if (Model.AllowProductSorting)
    {
        <div class="product-sorting">
            <span>@T("Catalog.OrderBy")</span>
            @Html.DropDownList("products-orderby", Model.AvailableSortOptions, new { aria_label = T("Catalog.OrderBy.Label"), @class = "hide-on"})
        </div>
        <script asp-location="Footer">
            $(document).ready(function () {
                var $orderByEl = $('#products-orderby');
                $orderByEl.on('change', function () {
                    CatalogProducts.getProducts();
                });

                $(CatalogProducts).on('before', function (e) {
                    e.payload.urlBuilder.addParameter('orderby', $orderByEl.val());
                });
            });
        </script>
    }


    @if (Model.AllowProductViewModeChanging)
    {
        <div class="product-viewmode">
            <span>@T("Catalog.ViewMode")</span>
            @if (Model.AvailableViewModes.Count > 1)
            {
                var gridMode = Model.AvailableViewModes[0];
                var listMode = Model.AvailableViewModes[1];

                <a class="viewmode-icon grid @if (gridMode.Selected){
                        <text>selected</text>
                }" data-viewmode="@gridMode.Value" title="@gridMode.Text" tabindex="0" aria-role="button" href="#">@gridMode.Text</a>
                <a class="viewmode-icon list @if (listMode.Selected){
                        <text>selected</text>
                }" data-viewmode="@listMode.Value" title="@listMode.Text" tabindex="0" aria-role="button" href="#">@listMode.Text</a>
            }
        </div>
        <script asp-location="Footer">
            $(document).ready(function () {
                var $viewModeEls = $('[data-viewmode]');
                $viewModeEls.on('click', function () {
                    if (!$(this).hasClass('selected')) {
                        $viewModeEls.toggleClass('selected');
                        CatalogProducts.getProducts();
                    }
                    return false;
                });

                $(CatalogProducts).on('before', function (e) {
                    var $viewModeEl = $('[data-viewmode].selected');
                    if ($viewModeEl) {
                        e.payload.urlBuilder
                            .addParameter('viewmode', $viewModeEl.data('viewmode'));
                    }
                });
            });
        </script>
    }
</div>